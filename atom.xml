<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[kevinkarwaski's Ops Blog]]></title>
  <link href="http://kevinkarwaski.github.com/atom.xml" rel="self"/>
  <link href="http://kevinkarwaski.github.com/"/>
  <updated>2013-04-28T20:04:02-04:00</updated>
  <id>http://kevinkarwaski.github.com/</id>
  <author>
    <name><![CDATA[Kevin Karwaski]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[ChefConf 2013 - Roundup]]></title>
    <link href="http://kevinkarwaski.github.com/blog/2013/04/28/chefconf-2013-takeaways/"/>
    <updated>2013-04-28T16:29:00-04:00</updated>
    <id>http://kevinkarwaski.github.com/blog/2013/04/28/chefconf-2013-takeaways</id>
    <content type="html"><![CDATA[<p>Hot off the heals of ChefConf 2013 I wanted to take a moment to talk about some of the relevent takeaways. Many of the ideas my team and I have been kicking around were loudly validated throughout the sessions and here are few worth mentioning&#8230;</p>

<!-- more -->


<h3>1. Use <a href="http://berkshelf.com/">Berkshelf</a> and <a href="http://www.vagrantup.com/">Vagrant</a>.</h3>

<ul>
<li>See <a href="https://twitter.com/resetexistence">Jamie Windsor&#8217;s</a> keynote at ChefConf 2013 on <a href="http://www.youtube.com/watch?v=hYt0E84kYUI">&#8220;The Berkshelf Way&#8221;</a></li>
<li>See <a href="https://twitter.com/mitchellh">Mitchell Hashimoto&#8217;s</a> ChefConf 2013 session on Vagrant.</li>
</ul>


<p>For the last few months I&#8217;ve been trying to develop better Cookbook Authoring habits and cross team cookbook collaboration with the developer teams in my org. Using advanced tools like Berkshelf / Librarian / Vagrant to simplifiy cookbook dependency management and decrease the iteration testing cycle seemed like a natural fit.</p>

<p>While I had kicked the tires of Librarian, I had not gone down the Berkshelf path which is unfortunate because Berkshelf was mentioned time and time again throughout many of the sessions. Indeed, it appears to be quickly becoming the defacto standard for cookbook dependency managment and development and for good reason.</p>

<p>Its rich integration with Vagrant really makes it shine as a super efficient cookbook development tool. But in the end a tool is just a tool and without a planned development process or framework it remains just that; a tool.</p>

<p>Enter &#8220;The Berkshelf Way&#8221; of cookbook development. It is fundamentally a <a href="http://tom.preston-werner.com/2010/08/23/readme-driven-development.html">Readme Driven Development</a> process. There are four main components:</p>

<ul>
<li><strong>Work in verticals from the outside in:</strong> Start with the application or end result and work your way back to the services and dependencies that actually drive the thing you are trying to develop. Create a cookbook for every single service of application you have. Apply common design patterns to each of the components in the cookbook.</li>
</ul>


<p>Cookbook Patterns: Application, Library and Wrapper</p>

<ul>
<li><p><strong>Favor Data Driven Cookbooks:</strong> Encourages the reuse of public cookbooks by changing the cookbooks behavior at runtime. Favor configuring with attributes rather than data bags -or- encrypted data bags. Only use data bags for org wide (base role) info: users, groups, apt/yum repos,</p></li>
<li><p><strong>Write well-encapsulated cookbooks:</strong> Work on cookbooks in isolation so they can be as portable as possible. How do roles fit in? They don&#8217;t. Use a recipe instead. Roles aren&#8217;t versioned and typically contain org level data. What about data bags. Use them where they make sense. Always validate the databags.</p></li>
<li><p><strong>Have short interation loops:</strong> Using the vagrant-berkshelf plugin you can provision and test the cookbooks extremely quickly.</p></li>
</ul>


<p>This is a fantastic tool and development process we&#8217;re hoping to adopt at my org.</p>

<h3>2. Avoid the Chef Code Antipatterns.</h3>

<p>See <a href="https://twitter.com/julian_dunn">Julian Dunn&#8217;s</a> session at ChefConf 2013 on Antipatterns.</p>

<h3>3. Package everything.</h3>

<p>More to come&#8230;</p>

<h3>4. Treat your Infrastructure like Garbage&#8230; because it is.</h3>

<p>More to come&#8230;</p>

<h3>5. Don&#8217;t be a jackass; always use AWS AutoScale groups.</h3>

<p>More to come&#8230;</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ChefConf 2013 - Advanced Cookbook Authoring Workshop]]></title>
    <link href="http://kevinkarwaski.github.com/blog/2013/04/24/chefconf-2013-advanced-cookbook-authoring-workshop/"/>
    <updated>2013-04-24T09:03:00-04:00</updated>
    <id>http://kevinkarwaski.github.com/blog/2013/04/24/chefconf-2013-advanced-cookbook-authoring-workshop</id>
    <content type="html"><![CDATA[<!-- more -->


<p>Wednesday Workshops:</p>

<p>Test-Driven Development for Chef Cookbooks with Bershelf and Vagrant</p>

<p>by Julian Dunn</p>

<p>First time doing the workshop. 10 years as sysadmin.</p>

<p>People are here from: Adobe, Goldman Sachs, Accenture, Montreal Daily Newspaper, Apple, Ars Technica</p>

<p>Infra testing / automation / dev is the same as software dev was in 1995. Ops aspires to better.</p>

<p>Three things are nessesary to test the cookbook:</p>

<ul>
<li>A place to store the artifact</li>
<li>chef-client with access</li>
<li>a target server running same OS as prod</li>
</ul>


<p> Artifact, Source Code,</p>

<p> Chefspec tests input / instantiaion of chef components; minitest-handler tests output.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[AWS Summit NYC - 2013]]></title>
    <link href="http://kevinkarwaski.github.com/blog/2013/04/18/aws-summit-nyc-2013/"/>
    <updated>2013-04-18T09:43:00-04:00</updated>
    <id>http://kevinkarwaski.github.com/blog/2013/04/18/aws-summit-nyc-2013</id>
    <content type="html"><![CDATA[<p>Raw notes&#8230;</p>

<!-- more -->


<p>At the AWS Summit, Vogels just took the stage. The persentation contains much of what we saw at AWS Re:Invent.</p>

<p>Then:
* 7 years ago, launched S3.</p>

<p>Now:
* 33 major services
* AWS Marketplace - Pre-packaged software (25 categories / 778 products)
* 31 Price Reductions since 2006! (Benefits of economies of scale)
* AWS Trusted Advisor - Saved customers $22M last year</p>

<p>Pace of innovation is the differentiator.
53 New Services announcements in Q1 2013.</p>

<p>Services:
S3: 2T Objects; 1.1M peak reqs/sec
EMR: 5.5M clusters launched since 5/10
DynamoDB: Now announcing Local Secondary Indexes.</p>

<p>DB always bottleneck in scaling.</p>

<p>Transformation:
What Drives it?
* Success of CC: Addresses uncertainty - on demand, only use when needed, pay only for what you use, leverage core competencies, turn fixed cost into variable.</p>

<ul>
<li><p>Trade capital expense for variable.</p></li>
<li><p>Reduce TCO. 70% reduced over 5 years. (Foursquare 50% reduction in analytics costs.)</p></li>
<li><p>Elasticity.</p></li>
<li><p>Increase innovation by reducing the cost of failure. exp often / fail quickly.</p></li>
<li><p>Stop spending money on Undifferentiated heavy lifting.</p></li>
<li><p>Go global in minutes.</p></li>
</ul>


<p>Russel - Bristol Myers Squib</p>

<ul>
<li>Created VPC / VPN connection from physical infra.</li>
<li>Created custom java dash to control instances</li>
<li>Custom AMIs</li>
</ul>


<p>The impact of AWS on clinical trials and studies is significant.</p>

<p>who&#8217;s doing it</p>

<p>Insurance: large variable capacity requirments.
Farmers,
Climate Corp: Weather Insurance: 5k cores EMR, 10k models, 5T data points (once a month), 15x data growth last year</p>

<p>Financial Services: Regulatory / compliance / Sec Reqs.</p>

<p>Nasdaq OMX / FirstSouthwest</p>

<p>FinQloud - secure, industry only cloud that reduces tech burdens, aid in compliance, allows focus on revenue. It&#8217;s a wrapper around there data center and AWS via DirectConnect.</p>

<p>FirstSouthwest - pub/corp finance / brokerage. FinQloud User.</p>

<p>Media / Advertising: Revenue is below 1950&#8217;s level</p>

<ul>
<li>Race is on to monitze data&#8230; no kidding. :)</li>
</ul>


<p>Manufacturing: GE</p>

<p>Built first commercial power grid in 1882.</p>

<p>Evolution of connectivity</p>

<p>Phase 1: People to people
Phase 2: Assets to assets via AI (trillions of assets)</p>

<p>Innovation limited by speed&#8230; Crowd Driven Ecosytem for Evolutionary Design. (CEED)</p>

<p>Orchastrates distrbuted workflows; collaborative Federated env&#8230; first commercial use of GovCloud.</p>

<p>Gene Sequencing: illunia
DNA sequencing&#8230; streams up to S3 for data analysis. BaseSpace (https://basespace.illumina.com/home/index)</p>

<p>1000 Genomes Project: 250TB available in S3</p>

<p>Hospitality: Customer Service</p>

<p>Four Seasons, Kempinski
Hotelogix
AirBNB</p>

<p>what&#8217;s next</p>

<p>Patterns for the furture&#8230; 70X the library of congress is collected on the first day of a baby&#8217;s life.</p>

<p>Big Data:
Move to real time
Deeper integrations
veritical app analytics
hadoop will become invisible</p>

<p>Mortar - aws startup winner
oS framework
Hadoop-as-a-service</p>

<p>1.8M in Seed
1000 Instances / $.5M/year</p>

<p>Connected Devices:
data generators
device / content are independent (device is window to cloud data)
increase workforce mobility</p>

<p>Security and Privacy:
readily avail encryption services
VPC by Default
ANNOUNCEMENT: RDS for Oracle - Transparent Data and native network encryption.</p>

<p>=================================</p>

<p>Into to Opsworks</p>

<p>why use it?
Simple - easy to use
Productive - reduces error with conventions
Flexibility - simplfies deploy
Powerful - reduces cost / time automation
Secure - fine grained permissions</p>

<p>Case study: EasyBib</p>

<ul>
<li>Info literacy company</li>
<li>different envs (dev)</li>
</ul>


<p>Higher Level Services:
Beanstalk / Opsworks</p>

<p>DIY:
Cloudformation / EC2</p>

<p>=====================================</p>

<p>Disaster Recovery in the Cloud</p>

<p>&#8220;The mind is not a vesel to be filled, but a fire to ignite.&#8221;</p>

<p>BC
High A -> backup storage -> disaster recovery</p>

<p>Monastery and Indoctrination have correlaries.</p>

<p>Lessons from Montecassino:
* Backup should be accessable
* Backup should be scalable
* Backup should be safe
* Should work with DR policy
* Someone should care about it</p>

<p>Case Study: Shaw Media
Reach 20M+ canadians / week</p>

<p>1M files would lose 1 file every 100K years&#8230; eleven 9s of durability.</p>

<p>Test the god damn disaster recovery plan. &#8220;CloudFormer&#8221; to create Cloud Formation templates.</p>

<p>=========================================</p>

<p>Continuous Delivery with Opsworks</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Hello world.]]></title>
    <link href="http://kevinkarwaski.github.com/blog/2013/04/07/hello-world/"/>
    <updated>2013-04-07T15:30:00-04:00</updated>
    <id>http://kevinkarwaski.github.com/blog/2013/04/07/hello-world</id>
    <content type="html"><![CDATA[<p>This is my first blog post using Octopress. I really like this blogging engine so far&#8230; more to come. :)</p>
]]></content>
  </entry>
  
</feed>
